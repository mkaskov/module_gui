<?xml version="1.0" ?>
  <robot name="robot_model">

    <link name="robot">
    </link>
     
    <joint name="robot_to_base" type="fixed">
        <parent link="robot"/>
        <child link="base_link"/>
        <origin rpy="0 0 0" xyz="0.00 0 0.05"/>
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="10"/>
    </joint>

    <link name="base_link">
      <visual>
        <geometry>
          <!-- new mesh -->
          <!--<mesh filename="package://puremindbot/robot/meshes/main_body_old.dae" />-->
          <mesh filename="package://puremind_configrobot/robot/meshes/main_body.dae" />
          <!--<mesh filename="package://puremindbot/robot/meshes/pr2.dae" />-->
        </geometry>
        <origin xyz="0.0 0 0.0" rpy="0 0 0"/>
      </visual>
      <collision name="base_link">
        <geometry>
          <cylinder length="0.10938" radius="0.178"/>
        </geometry>
        <origin xyz="0.0 0 0.05949" rpy="0 0 0"/>
      </collision>
      <inertial>
        <!-- COM experimentally determined -->
        <origin xyz="0.01 0 0"/>
        <mass value="2.4"/> <!-- 2.4/2.6 kg for small/big battery pack -->
        <!-- Kobuki's inertia tensor is approximated by a cylinder with homogeneous mass distribution
             More details: http://en.wikipedia.org/wiki/List_of_moment_of_inertia_tensors
             m = 2.4 kg; h = 0.09 m; r = 0.175 m
             ixx = 1/12 * m * (3 * r^2 + h^2)
             iyy = 1/12 * m * (3 * r^2 + h^2)
             izz = 1/2 * m * r^2
          -->
        <inertia ixx="0.019995" ixy="0.0" ixz="0.0"
                 iyy="0.019995" iyz="0.0"
                 izz="0.03675" />
      </inertial>
    </link>
    
    
    
      <!--&lt;!&ndash; hokuyo_1 Laser &ndash;&gt;-->
  <!--<link name="hokuyo_1">-->
    <!--&lt;!&ndash;<collision>&ndash;&gt;-->
      <!--&lt;!&ndash;<origin xyz="0 0 0" rpy="0 0 0"/>&ndash;&gt;-->
      <!--&lt;!&ndash;<geometry>&ndash;&gt;-->
        <!--&lt;!&ndash;<box size="0.1 0.1 0.1"/>&ndash;&gt;-->
      <!--&lt;!&ndash;</geometry>&ndash;&gt;-->
    <!--&lt;!&ndash;</collision>&ndash;&gt;-->

    <!--<inertial>-->
      <!--<mass value="1e-5" />-->
      <!--<origin xyz="0 0 0" rpy="0 0 0"/>-->
      <!--<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />-->
    <!--</inertial>-->
  <!--</link>-->

  <!--<link name="hokuyo_2">-->
    <!--&lt;!&ndash;<collision>&ndash;&gt;-->
      <!--&lt;!&ndash;<origin xyz="0 0 0" rpy="0 0 0"/>&ndash;&gt;-->
      <!--&lt;!&ndash;<geometry>&ndash;&gt;-->
        <!--&lt;!&ndash;<box size="0.1 0.1 0.1"/>&ndash;&gt;-->
      <!--&lt;!&ndash;</geometry>&ndash;&gt;-->
    <!--&lt;!&ndash;</collision>&ndash;&gt;-->

    <!--<inertial>-->
      <!--<mass value="1e-5" />-->
      <!--<origin xyz="0 0 0" rpy="0 0 0"/>-->
      <!--<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />-->
    <!--</inertial>-->
  <!--</link>-->

  <!--<link name="hokuyo_3">-->
    <!--&lt;!&ndash;<collision>&ndash;&gt;-->
      <!--&lt;!&ndash;<origin xyz="0 0 0" rpy="0 0 0"/>&ndash;&gt;-->
      <!--&lt;!&ndash;<geometry>&ndash;&gt;-->
        <!--&lt;!&ndash;<box size="0.1 0.1 0.1"/>&ndash;&gt;-->
      <!--&lt;!&ndash;</geometry>&ndash;&gt;-->
    <!--&lt;!&ndash;</collision>&ndash;&gt;-->

    <!--<inertial>-->
      <!--<mass value="1e-5" />-->
      <!--<origin xyz="0 0 0" rpy="0 0 0"/>-->
      <!--<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />-->
    <!--</inertial>-->
  <!--</link>-->
    

<!--<joint name="hokuyo_1_joint" type="fixed">-->
    <!--<axis xyz="0 1 0" />-->
    <!--<origin xyz=".0 .0 0.5" rpy="0 0 0"/>-->
    <!--<parent link="base_link"/>-->
    <!--<child link="hokuyo_1"/>-->
<!--</joint>-->

<!--<joint name="hokuyo_2_joint" type="fixed">-->
    <!--<axis xyz="0 1 0" />-->
    <!--<origin xyz=".0 0.178 0.5" rpy="0 0 0"/>-->
    <!--<parent link="base_link"/>-->
    <!--<child link="hokuyo_2"/>-->
<!--</joint>-->

<!--<joint name="hokuyo_3_joint" type="fixed">-->
    <!--<axis xyz="0 1 0" />-->
    <!--<origin xyz=".0 -0.178 0.5" rpy="0 0 0"/>-->
    <!--<parent link="base_link"/>-->
    <!--<child link="hokuyo_3"/>-->
<!--</joint>-->


<joint name="caster_front_joint" type="fixed">
      <parent link="base_link"/>
      <child link="caster_front_link"/>
      <origin xyz="0.115 0.0 0.007" rpy="-1.570796327 0 0"/>
    </joint>
    <link name="caster_front_link">
      <collision>
        <geometry>
          <cylinder length="0.0176" radius="0.017"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>

    <joint name="caster_back_joint" type="fixed">
      <parent link="base_link"/>
      <child link="caster_back_link"/>
      <origin xyz="-0.135 0.0 0.009" rpy="-1.570796327 0 0"/>
    </joint>
    <link name="caster_back_link">
      <collision>
        <geometry>
          <cylinder length="0.0176" radius="0.017"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>


    <link name="front_right_wheel">
      <visual>
        <geometry>
          <mesh filename="package://puremind_configrobot/robot/meshes/wheel.dae"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </visual>
      <collision>
        <geometry>
          <cylinder length="0.0206" radius="0.0350"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
         <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>


    <joint name="front_base_to_right_wheel" type="continuous">       
        <parent link="base_link"/>
        <child link="front_right_wheel"/>
        <origin xyz="0.00 -0.115 0.0250" rpy="-1.570796327 0 0"/>
        <axis xyz="0 0 1"/>
    </joint>

    <link name="front_left_wheel">
      <visual>
        <geometry>
          <mesh filename="package://puremind_configrobot/robot/meshes/wheel.dae"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </visual>
      <collision>
        <geometry>
          <cylinder length="0.0206" radius="0.0352"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>


    <joint name="front_base_to_left_wheel" type="continuous">       
        <parent link="base_link"/>
        <child link="front_left_wheel"/>
        <origin xyz="0.00 0.115 0.0250" rpy="-1.570796327 0 0"/>
        <axis xyz="0 0 1"/>
    </joint>

    <link name="top">
      <visual>
        <geometry>
                <cylinder radius="0.06" length="0.02"/>
        </geometry>
        <material name="blue">
                <color rgba="0 0 .8 1"/>
        </material>
      </visual>
      <!--<collision>-->
            <!--<geometry>-->
                <!--<cylinder radius="0.06" length="0.02"/>-->
            <!--</geometry>-->
       <!--</collision>-->
       <inertial>
            <origin rpy="0 0 0" xyz="0.000000 0.000000 0.000000"/>
            <mass value="1"/>
            <inertia ixx="0.0104" ixy="0" ixz="0" iyy="0.05638" iyz="0" izz="0.0500"/>
       </inertial>
     </link>

    <joint name="base_to_top" type="fixed">
        <parent link="base_link"/>
        <child link="top"/>
        <origin rpy="0 0 0" xyz="0.00 0 0.06"/>
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="10"/>
    </joint>

    <link name="sim_cam">
      <visual>
        <geometry>
            <sphere radius="0.025"/>
        </geometry>
        <material name="green">
            <color rgba="0 .8 0 1"/>
        </material>
      </visual>
      <!--<collision>-->
        <!--<geometry>-->
            <!--<sphere radius="0.025"/>-->
        <!--</geometry>-->
      <!--</collision>-->
      <inertial>
        <origin rpy="0 0 0" xyz="0.000000 0.000000 0.000000"/>
        <mass value="0.1"/>
        <inertia ixx="0.0104" ixy="0" ixz="0" iyy="0.05638" iyz="0" izz="0.0500"/>
      </inertial>
    </link>
          
    <joint name="top_to_sim_cam" type="fixed">
        <parent link="top"/>
        <child link="sim_cam"/>
        <!--<origin rpy="0 0 0" xyz="0.10 0 0.80"/>-->
        <origin rpy="0 0 0" xyz="0.10 0 0.25"/>
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="10"/>
    </joint>
	  
    <link name="usb_cam">
    </link>

     <link name="usb_cam_third">
    </link>
    
    <joint name="usb_cam_sim_cam" type="fixed">
        <parent link="sim_cam"/>
        <child link="usb_cam"/>
        <origin rpy="-1.59 0 -1.57" xyz="0 0 0"/>
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="10"/>
    </joint>


    <joint name="usb_cam_third_sim_cam" type="fixed">
        <parent link="sim_cam"/>
        <child link="usb_cam_third"/>
        <origin rpy="0 0.5 0" xyz="-2 0 1"/>
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="10"/>
    </joint>


    
    <gazebo reference="caster_front_link">
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
    </gazebo>

    <gazebo reference="caster_back_link">
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
    </gazebo>
          
    
    <gazebo reference="front_left_wheel">
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
    </gazebo>

    <gazebo reference="front_right_wheel">
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
    </gazebo>

    <gazebo reference="base_link">
        <mu1>0.3</mu1>
        <mu2>0.3</mu2>
    </gazebo>


    <gazebo reference="sim_cam">
        <sensor type="depth" name="openni_camera">
           <!--  <always_on>1</always_on>
            <visualize>true</visualize>
            <camera>
                <horizontal_fov>2.047</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <depth_camera>

                </depth_camera>
                <clip>
                    <near>0.1</near>
                    <far>100</far>
                </clip>
            </camera>

    -->

            <camera>
                <horizontal_fov>1.87</horizontal_fov>
                <image>
                    <width>416</width>
                    <height>234</height>
                    <format>R8G8B8</format>
                </image>
            </camera>

            <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
                <alwaysOn>true</alwaysOn>
                    <updateRate>10.0</updateRate>
                    <cameraName>/usb_cam</cameraName>
                    <frameName>usb_cam</frameName>
                <imageTopicName>rgb/image_raw</imageTopicName>
                <depthImageTopicName>depth/image_raw</depthImageTopicName>
                <pointCloudTopicName>depth/points</pointCloudTopicName>
                <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
                <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
                <pointCloudCutoff>0.5</pointCloudCutoff>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                <CxPrime>0.0</CxPrime>
                <Cx>0.0</Cx>
                <Cy>0.0</Cy>
                <focalLength>0.0</focalLength>
                </plugin>
        </sensor>
    </gazebo>


 <!--<gazebo reference="usb_cam_third">-->
    <!--<sensor type="camera" name="camera1">-->
      <!--<update_rate>30.0</update_rate>-->
      <!--<camera name="head">-->
        <!--<horizontal_fov>1.3962634</horizontal_fov>-->
        <!--<image>-->
          <!--<width>640</width>-->
          <!--<height>360</height>-->
          <!--<format>R8G8B8</format>-->
        <!--</image>-->
        <!--<clip>-->
          <!--<near>0.02</near>-->
          <!--<far>300</far>-->
        <!--</clip>-->
       <!--<lens>-->
        <!--<type>gnomonical</type>-->
        <!--<scale_to_hfov>true</scale_to_hfov>-->
        <!--<cutoff_angle>1.5707</cutoff_angle>-->
        <!--<env_texture_size>512</env_texture_size>-->
      <!--</lens>-->
        <!--<noise>-->
          <!--<type>gaussian</type>-->
          <!--&lt;!&ndash; Noise is sampled independently per pixel on each frame.-->
               <!--That pixel's noise value is added to each of its color-->
               <!--channels, which at that point lie in the range [0,1]. &ndash;&gt;-->
          <!--<mean>0.0</mean>-->
          <!--<stddev>0.007</stddev>-->
        <!--</noise>-->
      <!--</camera>-->
      <!--<plugin name="camera_controller" filename="libgazebo_ros_camera.so">-->
        <!--<alwaysOn>true</alwaysOn>-->
        <!--<updateRate>0.0</updateRate>-->
        <!--<cameraName>rrbot/camera1</cameraName>-->
        <!--<imageTopicName>image_raw</imageTopicName>-->
        <!--<cameraInfoTopicName>camera_info</cameraInfoTopicName>-->
        <!--<frameName>camera_link</frameName>-->
        <!--<hackBaseline>0.07</hackBaseline>-->
         <!--<distortion>-->
            <!--<k1>-0.020691</k1>-->
            <!--<k2>-0.011846</k2>-->
             <!--<p1>0.002766</p1>-->
             <!--<p2>0.002499</p2>-->
                <!--<center>0.5 0.5</center>-->
          <!--</distortion>-->
      <!--</plugin>-->
    <!--</sensor>-->
  <!--</gazebo>-->


    <!--<gazebo reference="usb_cam_third">-->
     <!--<sensor name="camera" type="camera">-->
        <!--<camera>-->
          <!--<horizontal_fov>1.047</horizontal_fov>-->
          <!--<image>-->
            <!--<width>320</width>-->
            <!--<height>240</height>-->
          <!--</image>-->
          <!--<clip>-->
            <!--<near>0.1</near>-->
            <!--<far>100</far>-->
          <!--</clip>-->
          <!--&lt;!&ndash;<lens>&ndash;&gt;-->
            <!--&lt;!&ndash;<type>gnomonical</type>&ndash;&gt;-->
            <!--&lt;!&ndash;<scale_to_hfov>true</scale_to_hfov>&ndash;&gt;-->
            <!--&lt;!&ndash;<cutoff_angle>1.5707</cutoff_angle>&ndash;&gt;-->
            <!--&lt;!&ndash;<env_texture_size>512</env_texture_size>&ndash;&gt;-->
          <!--&lt;!&ndash;</lens>&ndash;&gt;-->
        <!--</camera>-->
        <!--<always_on>1</always_on>-->
        <!--<update_rate>30</update_rate>-->
      <!--</sensor>-->
    <!--</gazebo>-->


    <!--<gazebo reference="usb_cam_third">-->
        <!--<sensor type="wideangelcameras" name="zzz">-->
           <!--&lt;!&ndash;  <always_on>1</always_on>-->
            <!--<visualize>true</visualize>-->
            <!--<camera>-->
                <!--<horizontal_fov>2.047</horizontal_fov>-->
                <!--<image>-->
                    <!--<width>640</width>-->
                    <!--<height>480</height>-->
                    <!--<format>R8G8B8</format>-->
                <!--</image>-->
                <!--<depth_camera>-->

                <!--</depth_camera>-->
                <!--<clip>-->
                    <!--<near>0.1</near>-->
                    <!--<far>100</far>-->
                <!--</clip>-->
            <!--</camera>-->

    <!--&ndash;&gt;-->

            <!--<camera>-->
                <!--<horizontal_fov>1.57</horizontal_fov>-->
                <!--<image>-->
                    <!--<width>640</width>-->
                    <!--<height>360</height>-->
                    <!--<format>R8G8B8</format>-->
                <!--</image>-->
            <!--</camera>-->


            <!--<plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">-->
                <!--<alwaysOn>true</alwaysOn>-->
                    <!--<updateRate>10.0</updateRate>-->
                    <!--<cameraName>/usb_cam_third</cameraName>-->
                    <!--<frameName>usb_cam_third</frameName>-->
                <!--<imageTopicName>rgb/image_raw</imageTopicName>-->
                <!--&lt;!&ndash;<depthImageTopicName>depth/image_raw</depthImageTopicName>&ndash;&gt;-->
                <!--&lt;!&ndash;<pointCloudTopicName>depth/points</pointCloudTopicName>&ndash;&gt;-->
                <!--<cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>-->
                <!--&lt;!&ndash;<depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>&ndash;&gt;-->
                <!--&lt;!&ndash;<pointCloudCutoff>0.5</pointCloudCutoff>&ndash;&gt;-->
                    <!--&lt;!&ndash;<hackBaseline>0.07</hackBaseline>&ndash;&gt;-->
                    <!--&lt;!&ndash;<distortionK1>0.0</distortionK1>&ndash;&gt;-->
                    <!--&lt;!&ndash;<distortionK2>0.0</distortionK2>&ndash;&gt;-->
                    <!--&lt;!&ndash;<distortionK3>0.0</distortionK3>&ndash;&gt;-->
                    <!--&lt;!&ndash;<distortionT1>0.0</distortionT1>&ndash;&gt;-->
                    <!--&lt;!&ndash;<distortionT2>0.0</distortionT2>&ndash;&gt;-->
                <!--<CxPrime>0.0</CxPrime>-->
                <!--<Cx>0.0</Cx>-->
                <!--<Cy>0.0</Cy>-->
                <!--<focalLength>0.0</focalLength>-->
                <!--</plugin>-->
        <!--</sensor>-->
    <!--</gazebo>-->



    
    <!-- camera -->
    <gazebo reference="sim_cam1">
      <sensor type="camera" name="camera1">
        <update_rate>10.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.57</horizontal_fov>
          <image>
            <width>300</width>
            <height>300</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>/usb_cam</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>usb_cam</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
    
    <gazebo>
      <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <legacyMode>false</legacyMode>
        <leftJoint>front_base_to_left_wheel</leftJoint>
        <rightJoint>front_base_to_right_wheel</rightJoint>
        <wheelSeparation>0.230</wheelSeparation>
        <wheelDiameter>0.070</wheelDiameter>
        <torque>30</torque>
        <commandTopic>puremindbot/cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>base_link</robotBaseFrame>
        
        <publishWheelTF>true</publishWheelTF>
        <publishWheelJointState>true</publishWheelJointState>
      </plugin>
    </gazebo>
    
        <!--&lt;!&ndash; hokuyo_1 &ndash;&gt;-->
  <!--<gazebo reference="hokuyo_1">-->
    <!--<sensor type="gpu_ray" name="head_hokuyo_1_sensor">-->
      <!--<pose>0 0 0 0 0 0</pose>-->
      <!--<visualize>true</visualize>-->
      <!--<update_rate>5</update_rate>-->
      <!--<ray>-->
        <!--<scan>-->
          <!--<horizontal>-->
            <!--<samples>5</samples>-->
            <!--<resolution>1</resolution>-->
            <!--<min_angle>-0.01</min_angle>-->
            <!--<max_angle>0.01</max_angle>-->
          <!--</horizontal>-->
        <!--</scan>-->
        <!--<range>-->
          <!--<min>0.10</min>-->
          <!--<max>10.0</max>-->
          <!--<resolution>0.1</resolution>-->
        <!--</range>-->
        <!--<noise>-->
          <!--<type>gaussian</type>-->
          <!---->
          <!--<mean>0.0</mean>-->
          <!--<stddev>0.01</stddev>-->
        <!--</noise>-->
      <!--</ray>-->
      <!--<plugin name="gazebo_ros_head_hokuyo_1_controller" filename="libgazebo_ros_gpu_laser.so">-->
        <!--<topicName>/puremindbot/laser_1</topicName>-->
        <!--<frameName>hokuyo_1</frameName>-->
      <!--</plugin>-->
    <!--</sensor>-->
  <!--</gazebo>-->

   <!--<gazebo reference="hokuyo_2">-->
    <!--<sensor type="gpu_ray" name="head_hokuyo_2_sensor">-->
      <!--<pose>0 0 0 0 0 0</pose>-->
      <!--<visualize>true</visualize>-->
      <!--<update_rate>5</update_rate>-->
      <!--<ray>-->
        <!--<scan>-->
          <!--<horizontal>-->
            <!--<samples>5</samples>-->
            <!--<resolution>1</resolution>-->
            <!--<min_angle>-0.01</min_angle>-->
            <!--<max_angle>0.01</max_angle>-->
          <!--</horizontal>-->
        <!--</scan>-->
        <!--<range>-->
          <!--<min>0.10</min>-->
          <!--<max>10.0</max>-->
          <!--<resolution>0.1</resolution>-->
        <!--</range>-->
        <!--<noise>-->
          <!--<type>gaussian</type>-->

          <!--<mean>0.0</mean>-->
          <!--<stddev>0.01</stddev>-->
        <!--</noise>-->
      <!--</ray>-->
      <!--<plugin name="gazebo_ros_head_hokuyo_2_controller" filename="libgazebo_ros_gpu_laser.so">-->
        <!--<topicName>/puremindbot/laser_2</topicName>-->
        <!--<frameName>hokuyo_2</frameName>-->
      <!--</plugin>-->
    <!--</sensor>-->
  <!--</gazebo>-->

   <!--<gazebo reference="hokuyo_3">-->
    <!--<sensor type="gpu_ray" name="head_hokuyo_3_sensor">-->
      <!--<pose>0 0 0 0 0 0</pose>-->
      <!--<visualize>true</visualize>-->
      <!--<update_rate>5</update_rate>-->
      <!--<ray>-->
        <!--<scan>-->
          <!--<horizontal>-->
            <!--<samples>5</samples>-->
            <!--<resolution>1</resolution>-->
            <!--<min_angle>-0.01</min_angle>-->
            <!--<max_angle>0.01</max_angle>-->
          <!--</horizontal>-->
        <!--</scan>-->
        <!--<range>-->
          <!--<min>0.10</min>-->
          <!--<max>10.0</max>-->
          <!--<resolution>0.1</resolution>-->
        <!--</range>-->
        <!--<noise>-->
          <!--<type>gaussian</type>-->

          <!--<mean>0.0</mean>-->
          <!--<stddev>0.01</stddev>-->
        <!--</noise>-->
      <!--</ray>-->
      <!--<plugin name="gazebo_ros_head_hokuyo_3_controller" filename="libgazebo_ros_gpu_laser.so">-->
        <!--<topicName>/puremindbot/laser_3</topicName>-->
        <!--<frameName>hokuyo_3</frameName>-->
      <!--</plugin>-->
    <!--</sensor>-->
  <!--</gazebo>-->

  </robot>
